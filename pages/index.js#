import { useEffect, useState, memo } from "react";
import SocketIOFileUpload from "socketio-file-upload";
import { v1 } from "uuid";
import io from "socket.io-client";
import styles from "@styles/Home.module.css";

export default memo(function Home() {
	const [pushsocket, setpushsocket] = useState();
	const [val, setval] = useState("");
	const [chat, setChat] = useState("");
	const [chatArr, setchatArr] = useState([]);
	const [agentlist, setagentlist] = useState([]);
	const [progress, setprogress] = useState();
	useEffect(() => {
		fetch("/api/socketio", {
			method: "GET",
			headers: {
				"Content-Type": "application/json",
			}
		}).finally(() => {
			const socket = io()
			socket.on("connect", () => {
				console.log("socket connected")
				socket.emit("queue")
			})
			socket.on("queue", data => {
				console.log(data)
			})
			socket.on("disconnect", () => {
				console.log("socket disconnected")
			})
			// setTimeout(() => {
			// 	socket.disconnect()
			// }, [6000])
		})
	}, []);

	// useEffect(() => {
	// 	const session = v1();
	// 	sessionStorage.setItem("session", session);
	// 	fetch("/api/socketio", {
	// 		method: "POST",
	// 		headers: {
	// 			"Content-Type": "application/json",
	// 		},
	// 		body: JSON.stringify({ src: session }),
	// 	}).finally(() => {
	// 		const socket = io();

	// 		setpushsocket(socket);

	// 		const uploader = new SocketIOFileUpload(socket);
	// 		uploader.listenOnSubmit(
	// 			document.getElementById("submitfile"),
	// 			document.getElementById("siofu-input")
	// 		);

	// 		socket.on("upload.progress", (message) => {
	// 			setprogress(message.percentage);
	// 		});

	// 		socket.on("connect", () => {
	// 			console.log("connect");
	// 			// socket.emit("hello");
	// 			// socket.emit("agentlist");
	// 		});

	// 		socket.on("hello", (data) => {
	// 			console.log("hello", data);
	// 		});

	// 		socket.on("a user connected", (data) => {
	// 			console.log("a user connected ", data);
	// 		});

	// 		socket.on("chat", (data) => {
	// 			console.log(data);
	// 		});

	// 		socket.on("login", (data) => {
	// 			console.log(data);
	// 		});

	// 		socket.on("agentlist", (data) => {
	// 			setagentlist(data);
	// 		});

	// 		socket.on(session, (data) => {
	// 			console.log("session received ", data);
	// 		});

	// 		socket.on("joinRoom", (data) => {
	// 			console.log("Room Joined");
	// 			console.log(data);
	// 			setchatArr(data.content);
	// 		});

	// 		socket.on("chatBroadcast", (data) => {
	// 			console.log(data);
	// 			setchatArr(data.content);
	// 		});

	// 		socket.on("disconnect", () => {
	// 			console.log("disconnect");
	// 		});
	// 	});
	// }, []);

	function joinRoom() {
		const session = sessionStorage.getItem("session");
		pushsocket.emit("joinRoom", val);
	}

	function sendChat() {
		pushsocket.emit("sendChat", { id: val, content: chat });
		setChat("");
	}

	return (
		<div className={styles.container}>
			<pre className={styles.pre}>Hello, welcome to NextJS</pre>
			<input
				type="number"
				defaultValue={val}
				onChange={(e) => {
					setval(e.target.value);
				}}
			></input>
			<button onClick={joinRoom}>Join Room</button>
			<br />
			<input
				type="text"
				value={chat}
				onChange={(e) => {
					setChat(e.target.value);
				}}
			></input>
			<button onClick={sendChat}>Send</button>
			<br />
			<input type="file" id="siofu-input"></input>
			<button id="submitfile">upload</button>
			<br />
			<span>progress {progress}</span>
			<br />
			<button onClick={() => {
				var btn = document.createElement("input");
				btn.setAttribute("type", "file")
				btn.setAttribute("id", "file-input")
				btn.style.display = "none"
				document.body.appendChild(btn);
			}}>create element</button>
			<input hidden />
			{/* <div className={styles.tableusers}>
				<table className={styles.tablecontent}>
					<thead>
						<th>username</th>
						<th>status</th>
						<th>online</th>
					</thead>
					{agentlist.map((e, idx) => (
						<tbody key={idx}>
							<td>{e.username}</td>
							<td>{e.status}</td>
							<td>{e.websocket}</td>
						</tbody>
					))}
				</table>
			</div> */}
		</div>
	);
});
